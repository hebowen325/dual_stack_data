import re,requests
data=requests.get("https://opendata.rapid7.com/sonar.fdns_v2/")
Text=data.text
res1=re.search('\/sonar.fdns_v2\/(.*fdns_a.json.gz)"',Text)
res2=re.search('\/sonar.fdns_v2\/(.*fdns_aaaa.json.gz)"',Text)
x="/home/sgl/bwhe/DNSGrep"
print("# fetch the fdns_a file")
print("wget -O "+x+"/fdns_a/fdns_a.gz https://opendata.rapid7.com/sonar.fdns_v2/"+res1.groups()[0])
print("# extract and format our data")
print("gunzip -c "+x+"/fdns_a/fdns_a.gz| grep \"\\\"type\\\":\\\"a\\\"\" | jq -r '.value + \",\"+ .name' | tr '[:upper:]' '[:lower:]' | rev  | grep \"^[a-zA-Z]\" > "+x+"/fdns_a/fdns_a.rev.lowercase.txt")
print("# split the data into chunks ot sort")
print("split -l 50000000 "+x+"/fdns_a/fdns_a.rev.lowercase.txt "+x+"/fdns_a/fileChunk")
print("# remove the old files")
print("rm "+x+"/fdns_a/fdns_a.gz")
print("rm "+x+"/fdns_a/fdns_a.rev.lowercase.txt")
print("# Sort each of the pieces and delete the unsorted one")
print("for f in "+x+"/fdns_a/fileChunk*; do LC_COLLATE=C sort \"$f\" > \"$f\".sorted && rm \"$f\"; done")
print("# merge the sorted files with local tmp directory")
print("mkdir -p "+x+"/fdns_a/sorttmp")
print("LC_COLLATE=C sort -T "+x+"/fdns_a/sorttmp/ -muo "+x+"/fdns_a/fdns_a.sort.txt "+x+"/fdns_a/fileChunk*.sorted")
print("# clean up\nrm "+x+"/fdns_a/fileChunk*\nrm -r "+x+"/fdns_a/sorttmp")
print("split -l 50000000 "+x+"/fdns_a/fdns_a.sort.txt "+x+"/fdns_a/fileChunk")
print("tail -n 1 "+x+"/fdns_a/fileChunk* > "+x+"/fdns_a/record.txt")
print("python3 "+x+"/fdns_a/chrecord.py >"+x+"/fdns_a/Record.txt")
print("rm "+x+"/fdns_a/fdns_a.sort.txt")
print("# fetch the fdns_aaaa file")
print("wget -O "+x+"/fdns_aaaa/fdns_aaaa.gz https://opendata.rapid7.com/sonar.fdns_v2/"+res2.groups()[0])
print("# extract and format our data")
print("gunzip -c "+x+"/fdns_aaaa/fdns_aaaa.gz| grep \"\\\"type\\\":\\\"aaaa\\\"\" | jq -r '.value + \",\"+ .name' | tr '[:upper:]' '[:lower:]' | rev  | grep \"^[a-zA-Z]\" > "+x+"/fdns_aaaa/fdns_aaaa.rev.lowercase.txt")
print("# split the data into chunks ot sort")
print("split -l 20000000 "+x+"/fdns_aaaa/fdns_aaaa.rev.lowercase.txt "+x+"/fdns_aaaa/fileChunk")
print("# remove the old files")
print("rm "+x+"/fdns_aaaa/fdns_aaaa.gz")
print("rm "+x+"/fdns_aaaa/fdns_aaaa.rev.lowercase.txt")
print("# Sort each of the pieces and delete the unsorted one")
print("for f in "+x+"/fdns_aaaa/fileChunk*; do LC_COLLATE=C sort \"$f\" > \"$f\".sorted && rm \"$f\"; done")
print("# merge the sorted files with local tmp directory")
print("mkdir -p "+x+"/fdns_aaaa/sorttmp")
print("LC_COLLATE=C sort -T "+x+"/fdns_aaaa/sorttmp/ -muo "+x+"/fdns_aaaa/fdns_aaaa.sort.txt "+x+"/fdns_aaaa/fileChunk*.sorted")
print("# clean up\nrm "+x+"/fdns_aaaa/fileChunk*\nrm -r "+x+"/fdns_aaaa/sorttmp")
print("split -l 20000000 "+x+"/fdns_aaaa/fdns_aaaa.sort.txt "+x+"/fdns_aaaa/fileChunk")
print("tail -n 1 "+x+"/fdns_aaaa/fileChunk* > "+x+"/fdns_aaaa/record.txt")
print("python3 "+x+"/fdns_aaaa/chrecord.py >"+x+"/fdns_aaaa/Record.txt")
print("rm "+x+"/fdns_aaaa/fdns_aaaa.sort.txt")
print("ulimit -n 10240")
print("go run "+x+"/fdns_aaaa/dnsgrep.go >"+x+"/fdns_aaaa/ans.txt")
print("cat "+x+"/fdns_aaaa/ans.txt | grep \"; ;\">"+x+"/OnlyIPv6.txt")
print("cat "+x+"/fdns_aaaa/ans.txt | grep -v \"; ;\">"+x+"/BothIP.txt")
print("rm "+x+"/fdns_aaaa/ans.txt")
print("LC_ALL=C sort -k 2 -t ';' -u "+x+"/BothIP.txt>"+x+"/UnionResults.txt")
print("python3 DNS_Search.py")
print("rm "+x+"/UnionResults.txt")
print("rm "+x+"/BothIP.txt")
